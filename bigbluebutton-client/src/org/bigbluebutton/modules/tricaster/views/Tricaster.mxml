<?xml version="1.0" encoding="utf-8"?>

<!--
BigBlueButton open source conferencing system - http://www.bigbluebutton.org

Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).

BigBlueButton is free software; you can redistribute it and/or modify it under the 
terms of the GNU Lesser General Public License as published by the Free Software 
Foundation; either version 2.1 of the License, or (at your option) any later 
version. 

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along 
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

$Id: $
-->

<!--
Notes.mxml is the main view of the SharedNotes application
-->
<MDIWindow xmlns="flexlib.mdi.containers.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
		   width="400" height="300" xmlns:mate="http://mate.asfusion.com/" 
		   implements="org.bigbluebutton.common.IBbbModuleWindow" 
		   title="{windowTitle}" creationComplete="onCreationComplete()"
		   label="Example Chat Window" layout="vertical">
	
	<mx:Script>
		<![CDATA[
			import flexlib.mdi.events.MDIWindowEvent;
			
			import org.bigbluebutton.main.views.MainCanvas;
			
			public var moduleAttributes:Object;
			
			[Bindable] private var windowTitle:String = "Live Stream";
			
			[Bindable] private var nc:NetConnection;
			
			private var ns:NetStream;
			private var st:SoundTransform;
			private var video:Video;
			private var vidWidth:Number;
			private var vidHeight:Number;
			
			private function onCreationComplete():void{
				nc = new NetConnection();
				nc.addEventListener(NetStatusEvent.NET_STATUS, nc_StatusEvent);
				
				nc.connect("rtmp://video.webcme.net/wrl");
			}
			
			private function nc_StatusEvent(event:NetStatusEvent):void {
				switch (event.info.code) {
					case "NetConnection.Connect.Success":
						playStream();
						break;
					
				}
				
			}
			private function playStream():void {
				
				var nsClient:Object = {};
				nsClient.onMetaData = ns_onMetaData;
				
				ns = new NetStream(nc);
				ns.bufferTime = 0.1;
				ns.client = nsClient;
				st = new SoundTransform();
				ns.soundTransform = st;
				ns.play("NCNP");

			}
			
			private function fullScreen():void {
				var screenRect:Rectangle = new Rectangle(video.x, video.y, video.width, video.height);
				stage.fullScreenSourceRect = screenRect;
				stage.displayState = StageDisplayState.FULL_SCREEN;
			}
			
			public function getPrefferedPosition():String{ 
				return MainCanvas.POPUP;
			}
			
			public function ns_onMetaData(infoObject:Object):void {
				// stub
				//trace(infoObject);
				vidWidth = infoObject.width;
				vidHeight = infoObject.height;

				video = new Video(vidWidth, vidHeight);
				video.attachNetStream(ns);
				vidContainer.addChild(video);

				scaleVideo();
			}
			
			private function scaleVideo():void {
				if (vidWidth && vidHeight) {
					if ((vidContainer.width / vidContainer.height) > (vidWidth / vidHeight)) {
						video.height = vidContainer.height;
						video.scaleX = video.scaleY;
					} else {
						video.width = vidContainer.width;
						video.scaleY = video.scaleX;
					}
				}
			}
			
			private function toggleMute():void {
				if (st.volume == 1) {
					muteButton.label = "Unmute";
					st.volume = 0;
					ns.soundTransform = st;
				} else {
					muteButton.label = "Mute";
					st.volume = 1;
					ns.soundTransform = st;				}
			}
			
		]]>
	</mx:Script>
	
	<!-- The text area where the notes get displayed -->
	<mx:UIComponent id="vidContainer" width="100%" height="100%" resize="scaleVideo();"/>
	<mx:HBox width="100%">
		<mx:Button id="muteButton" label="Mute" click="toggleMute();"/>
	</mx:HBox>
</MDIWindow>
